<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>baxter-config</artifactId>
		<groupId>com.baxter.config</groupId>
		<version>1.4.12-SNAPSHOT</version>
	</parent>

	<artifactId>baxter-config-server</artifactId>

	<name>Baxter Configuration Server</name>
	<description>Baxter Configuration Server application.</description>

	<build>

		<plugins>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<executions>
					<execution>
						<id>build-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
						<configuration>
							<classifier>deployable</classifier>
							<packagingExcludes>
								WEB-INF/lib/jetty*.jar
							</packagingExcludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>${application.main.class}</mainClass>
						</manifest>
						<manifestEntries>
							<Date>${maven.build.timestamp}</Date>
							<Revision>${buildNumber}</Revision>
							<Branch>${scmBranch}</Branch>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>build-standalone</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/standalone.xml</descriptor>
							</descriptors>
							<filters>
								<filter>${basedir}/src/main/unix/filter/standalone.properties</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>filter-control-files</id>
						<configuration>
							<filters>
								<filter>${basedir}/src/main/unix/filter/default.properties</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<profiles>

		<profile>
			<id>DEB</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<build>
				<plugins>

					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>filter-deb-spec-files</id>
								<configuration>
									<filters>
										<filter>${basedir}/src/main/unix/filter/default.properties</filter>
									</filters>
								</configuration>
							</execution>
							<execution>
								<id>filter-deb-script-files</id>
								<configuration>
									<filters>
										<filter>${basedir}/src/main/unix/filter/default.properties</filter>
									</filters>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>get-dependencies-for-deb</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<includeScope>runtime</includeScope>
									<outputDirectory>${deb-dependencies.dir}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<artifactId>unix-maven-plugin</artifactId>
						<groupId>no.arktekk.unix</groupId>
						<executions>
							<execution>
								<id>build-deb-installer</id>
								<configuration>
									<deb combine.children="append">
										<depends>java7-runtime,lsb-base(&gt;=
											3.2-13),libcommons-io-java,libcommons-beanutils-java</depends>
										<preDepends>sed</preDepends>
										<replaces>config-server</replaces>
									</deb>
									<assembly combine.children="append">
										<mkdirs>
											<paths>
												<path>${config.processors.lib.dir}</path>
												<path>${unix.application.doc.dir}</path>
												<path>${unix.application.log.dir}</path>
												<path>${unix.application.var.dir}/repository</path>
											</paths>
										</mkdirs>
										<copyFile>
											<path>${deb.scripts.dir}/start-configuration-server.sh</path>
											<toFile>${unix.application.bin.dir}/${unix.application.start.script}</toFile>
											<attributes>
												<user>${unix.user}</user>
												<group>${unix.group}</group>
												<mode>0775</mode>
											</attributes>
										</copyFile>
										<copyFile>
											<path>${deb.scripts.dir}/wrapper/service-init-script-deb.sh</path>
											<toFile>/etc/init.d/${unix.service.name}</toFile>
											<attributes>
												<mode>0775</mode>
											</attributes>
										</copyFile>
										<copyFile>
											<path>${project.build.directory}/${project.build.finalName}.jar</path>
											<toDir>${unix.application.lib.dir}</toDir>
										</copyFile>
										<copyDirectory>
											<from>${deb-dependencies.dir}</from>
											<to>${unix.application.lib.dir}</to>
										</copyDirectory>
										<copyFile>
											<path>src/main/resources/server.properties</path>
											<toFile>${unix.config.dir}/configuration-server</toFile>
										</copyFile>
										<copyFile>
											<path>src/main/resources/logback.xml</path>
											<toFile>${unix.config.dir}/configuration-server-logback.xml</toFile>
										</copyFile>
										<symlink>
											<path>${unix.config.dir}/configuration-server-log.xml</path>
											<value>${unix.config.dir}/configuration-server-logback.xml</value>
										</symlink>
									</assembly>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<properties>
				<deb-dependencies.dir>${project.build.directory}/deb-dependencies</deb-dependencies.dir>
			</properties>
		</profile>

		<profile>
			<id>RPM</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>rpm-maven-plugin</artifactId>
						<configuration>
							<requires>
								<require>java &gt;= 1.7.0</require>
								<require>jakarta-commons-io</require>
								<require>jakarta-commons-beanutils</require>
							</requires>
							<conflicts>
								<conflict>config-server</conflict>
							</conflicts>
							<preinstallScriptlet>
								<scriptFile>src/main/unix/scripts/rpm-pre-install</scriptFile>
							</preinstallScriptlet>
						</configuration>
						<executions>
							<execution>
								<id>build-std-rpm-installer</id>
								<configuration>
									<filters>
										<filter>${basedir}/src/main/unix/filter/default.properties</filter>
									</filters>
									<mappings>
										<mapping>
											<directory>${unix.config.dir}</directory>
											<configuration>noreplace</configuration>
											<sources>
												<source>
													<location>src/main/resources/server.properties</location>
													<destination>configuration-server</destination>
													<filter>false</filter>
												</source>
												<source>
													<location>src/main/resources/logback.xml</location>
													<destination>configuration-server-logback.xml</destination>
													<filter>true</filter>
												</source>
												<softlinkSource>
													<destination>configuration-server-log.xml</destination>
													<location>configuration-server-logback.xml</location>
												</softlinkSource>
											</sources>
										</mapping>
										<mapping>
											<directory>${unix.application.bin.dir}</directory>
											<filemode>755</filemode>
											<sources>
												<source>
													<location>src/main/scripts/start-configuration-server.sh</location>
													<destination>${unix.application.start.script}</destination>
													<filter>true</filter>
												</source>
											</sources>
										</mapping>
										<mapping>
											<directory>${unix.service.dir}</directory>
											<filemode>755</filemode>
											<username>root</username>
											<groupname>root</groupname>
											<sources>
												<source>
													<location>src/main/scripts/wrapper/service-init-script-rpm.sh</location>
													<destination>configuration-server</destination>
													<filter>true</filter>
												</source>
											</sources>
										</mapping>
										<mapping>
											<directory>${config.processors.lib.dir}</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.doc.dir}</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.log.dir}</directory>
										</mapping>
										<mapping>
											<configuration>noreplace</configuration>
											<directory>${unix.application.var.dir}/repository</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.lib.dir}</directory>
											<artifact>
												<classifiers>
													<classifier />
												</classifiers>
											</artifact>
											<dependency>
											</dependency>
										</mapping>
									</mappings>
								</configuration>
							</execution>
							<execution>
								<id>build-alt-rpm-installer</id>
								<configuration>
									<filters>
										<filter>${basedir}/src/main/unix/filter/rpm-alt.properties</filter>
									</filters>
									<mappings>
										<mapping>
											<directory>/opt/baxter</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.alt.root}</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.alt.root}/cs</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.alt.root}/cs/etc</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.alt.root}/cs/etc</directory>
											<configuration>noreplace</configuration>
											<sources>
												<source>
													<location>src/main/resources/server.properties</location>
													<destination>configuration-server</destination>
													<filter>false</filter>
												</source>
												<source>
													<location>src/main/resources/logback.xml</location>
													<destination>configuration-server-logback.xml</destination>
													<filter>true</filter>
												</source>
												<softlinkSource>
													<destination>configuration-server-log.xml</destination>
													<location>configuration-server-logback.xml</location>
												</softlinkSource>
											</sources>
										</mapping>
										<mapping>
											<directory>${unix.application.alt.root}/cs/bin</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.alt.root}/cs/bin</directory>
											<filemode>755</filemode>
											<sources>
												<source>
													<location>src/main/scripts/start-configuration-server.sh</location>
													<destination>${unix.application.start.script}</destination>
													<filter>true</filter>
												</source>
												<source>
													<location>src/main/scripts/wrapper/standalone.sh</location>
													<destination>${unix.service.name}</destination>
													<filter>true</filter>
												</source>
											</sources>
										</mapping>
										<mapping>
											<directory>${alt.config.processors.lib.dir}</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.alt.root}/cs/doc</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.alt.root}/cs/log</directory>
										</mapping>
										<mapping>
											<configuration>noreplace</configuration>
											<directory>${alt.config-server.root}/repository</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.alt.root}/cs/lib</directory>
										</mapping>
										<mapping>
											<directory>${unix.application.alt.root}/cs/lib</directory>
											<artifact>
												<classifiers>
													<classifier />
												</classifiers>
											</artifact>
											<dependency>
											</dependency>
											<sources>
												<softlinkSource>
													<location>/usr/share/configuration-server/java/commons-io.jar</location>
												</softlinkSource>
												<softlinkSource>
													<location>/usr/share/configuration-server/java/commons-beanutil.jar</location>
												</softlinkSource>
											</sources>
										</mapping>
										<mapping>
											<directory>${alt.config-server.root}</directory>
										</mapping>
									</mappings>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>APT</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<dependencyManagement>

		<dependencies>

			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>9.0.5.v20130815</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlet</artifactId>
				<version>9.0.5.v20130815</version>
			</dependency>

			<dependency>
				<groupId>args4j</groupId>
				<artifactId>args4j</artifactId>
				<version>2.0.29</version>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>baxter-config-om</artifactId>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>baxter-config-processor</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<artifactId>logback-classic</artifactId>
			<groupId>ch.qos.logback</groupId>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
		</dependency>

		<dependency>
			<groupId>args4j</groupId>
			<artifactId>args4j</artifactId>
		</dependency>

	</dependencies>

	<properties>
		<jira.component>${project.artifactId}</jira.component>
		<application.main.class>com.baxter.config.server.Main</application.main.class>
		<unix.service.name>configuration-server</unix.service.name>
		<unix.application.doc.dir>/usr/share/configuration-server/doc/baxter/${unix.service.name}</unix.application.doc.dir>
		<unix.application.log.dir>/var/log/baxter/${unix.service.name}</unix.application.log.dir>
		<unix.application.var.dir>/var/local/baxter/${unix.service.name}</unix.application.var.dir>
		<unix.application.jetty.dir>${unix.application.var.dir}/jetty</unix.application.jetty.dir>
		<unix.application.start.script>start-${unix.service.name}</unix.application.start.script>
		<unix.application.lib.dir>/usr/share/java/configuration-server</unix.application.lib.dir>
	</properties>

</project>
